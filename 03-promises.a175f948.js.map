{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAwBpC,SAASC,EAAcC,EAAUC,GAE/B,MAAMC,EAAgB,C,SAACF,E,MAAUC,GAE3BE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC9BC,YAAW,KACLN,EAEFI,EAAQL,GAGRM,EAAON,EAAc,GAEtBD,EAAM,G,CAtCXL,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOlB,EAAKE,cAAc,uBAAuBiB,OACzDC,EAAOF,OAAOlB,EAAKE,cAAc,sBAAsBiB,OACvDE,EAASH,OAAOlB,EAAKE,cAAc,wBAAwBiB,OAEjE,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAC/BnB,EAAcmB,EAAGL,GAASK,EAAI,GAAKF,GACjCG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA0B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA0B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAIlEL,EAAK4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(form.querySelector(\"input[name='delay']\").value);\n  const step = Number(form.querySelector(\"input[name='step']\").value);\n  const amount = Number(form.querySelector(\"input[name='amount']\").value);\n\n  for (let i = 1; i <= amount; i += 1) {\n     createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n       Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n     .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n\n  form.reset();\n\n}\n\nfunction createPromise(position, delay) {\n\n  const promiseObject = {position, delay};\n  \n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise ((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve(promiseObject)\n    } else {\n      // Reject\n      reject(promiseObject)\n    }\n  }, delay)\n})\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","promiseObject","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.a175f948.js.map"}